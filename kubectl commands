kubectl create secret generic pgpassword --from-literal PGPASSWORD

kubectl get secrets

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud-generic.yaml

kubectl get svc -n ingress-nginx

curl -LO https://git.io/get_helm.sh
chmod 700 get_helm.sh
./get_helm.sh

kubectl get namespaces
kubectl create serviceaccount --namespace kube-system tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller

helm init --service-account tiller --upgrade
helm install stable/nginx-ingress --name my-nginx --set rbac.create=true

kind: Ingress
metadata:
annotations:
    kubernetes.io/ingress.class: nginx
name: example
namespace: foo
spec:
rules:
    - host: www.example.com
    http:
        paths:
        - backend:
            serviceName: exampleService
            servicePort: 80
            path: /
# This section is only required if TLS is to be enabled for the Ingress
tls:
    - hosts:
        - www.example.com
        secretName: example-tls
If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:
apiVersion: v1
kind: Secret
metadata:
name: example-tls
namespace: foo
data:
tls.crt: <base64 encoded cert>
tls.key: <base64 encoded key>
type: kubernetes.io/tls